# N is very large and e is small but M**e%n =c (~/CTF/Picoctf/2021/Mini_RSA)
	In RSA, M**3 mod n = c. This can also be written as M**3 = tn + c for some t. So, this means that M = iroot(tn+c, 3). We just need to find the right t. Given that (M ** 3) is only "barely" larger than n
- n=q*p
- e is often set 2^16 +1 =65537
- phi = (q-1)*(p-1)
or e with gcd(e,phi)=1 # ước chung lớn nhất
- d with e*d = 1 mod phi (d = invert(e,phi)or d = inverse(e,phi))
- u,v = extended_gcd(e,(p-1)*(q-1))	#(tính u và v sao cho u*e +v*(p-1)*(q-1) = 1 mod (p-1)*(q-1) )
 => u*e = 1 mod (p-1)*(q-1) (vì v*(q-1)*(q-1) là bội số của (p-1)*(q-1) )
 => u, _ = extended_gcd( e , phi )


def extended_gcd(a: int, b: int) -> (int, int):
	#find x,y => x*a +y*b = gcd(a,b)
	if b==0:
		return 1, 0
	u, v = extended_gcd(b, a%b)
	# gcd(a,b)= gcd(b, a%b)
	# u*b +v*a%b =
	# u*b +v*(a-(a//b)*b) =
	# u*b +v*a -v*(a//b)*b = 
	# v*a +(u - v*(a//b))*b 
	return v, u - v*(a//b)
	
