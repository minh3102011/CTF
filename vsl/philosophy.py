from sympy import symbols, Eq, solve
from Crypto.Util.number import inverse, long_to_bytes

# Cho trước các giá trị
n = 86088719452932625928188797700212036385645851492281481088289877829109110203124545852827976798704364393182426900932380436551569867036871171400190786913084554536903236375579771401257801115918586590639686117179685431627540567894983403579070366895343181435791515535593260495162656111028487919107927692512155290673
phi_incorrect = 86088719452932625928188797700212036385645851492281481088289877829109110203124545852827976798704364393182426900932380436551569867036871171400190786913084573410416063246853198167436938724585247461433706053188624379514833802770205501907568228388536548010385588837258085711058519777393945044905741975952241886308
e = 65537
c = 64457111821105649174362298452450091137161142479679349324820456191542295609033025036769398863050668733308827861582321665479620448998471034645792165920115009947792955402994892700435507896792829140545387740663865218579313148804819896796193817727423074201660305082597780007494535370991899386707740199516316196758

# Tạo các ký hiệu cho p và q
p, q = symbols('p q')

# Thiết lập các phương trình
eq1 = Eq(p * q, n)
eq2 = Eq((p + 1) * (q + 1), phi_incorrect)

# Giải hệ phương trình
solutions = solve((eq1, eq2), (p, q))
p_val, q_val = solutions[0]  # Chọn một cặp giá trị (p, q)

# Tính toán giá trị phi chính xác
phi_correct = (p_val - 1) * (q_val - 1)

# Chuyển đổi phi_correct thành số nguyên chuẩn Python
phi_correct = int(phi_correct)

# Tính toán khóa bí mật d
d = inverse(e, phi_correct)

# Giải mã ciphertext
m = pow(c, d, n)

# Chuyển đổi m trở lại thành chuỗi bytes
flag = long_to_bytes(m).decode()
print(flag)

